#! ./yasl_linux

{
    "========= 0 ========\n" print
    #
    #(print "\n" print)
    "====================\n" print
    1 exit
} print_stack_0
{
    "========= 1 ========\n" print
    1:#
    #(1:print "\n" print)
    "====================\n" print
    1 exit
} print_stack_1
{
    "========= 2 ========\n" print
    2:#
    #(2:print "\n" print)
    "====================\n" print
    1 exit
} print_stack_2
{
    "========= 3 ========\n" print
    3:#
    #(3:print "\n" print)
    "====================\n" print
    1 exit
} print_stack_3
{
    "========= 9 ========\n" print
    9:#
    #(9:print "\n" print)
    "====================\n" print
    1 exit
} print_stack_9


!!

{
    "/" - 47 + 
} to_ascii

{
    to_ascii
    = 43 == ? (! 62:9)    // +
    = 47 == ? (! 63:9)    // '/'
    = = 48 >= 2 ^ 57 <= && ? (= 4 +:9)  // '0' -> '9'
    = = 65 >= 2 ^ 90 <= && ? (= 65 -:9) // 'A' -> 'Z'
    = = 97 >= 2 ^ 122 <= && ? (= 71 -:9)  // 'a' -> 'z'
    9:# 0 == ? ("Error: cannot convert char to base64.\n" print 1 exit)
    ! 9:= 9:!
} to_b64

"A" to_b64 print_stack_0

// "\e[48;2;0;255;0m \e[0m" "\n" + print

//"ZYXWVUTSRQPONMLKJIHGFEDCBA" ][:1 1:!
//0:3 // count
//
//1:=:1 "E":1 print_stack_1
//
//1:!= print_stack_1  ? (
//    1:3 3:+:3 // increment count
//) : (
//    3:=:0     // get count
//)


// 2:("000000" "000001" "000010" 3 []):2
// 1:2 2:]#[


