#! ./yasl_linux

{
    ][          // unlist the string with the size
    = 0 != ? (    // if size not 0
        = 1 + !^    // duplicate size after each letter
        # 2 - #!    // drop created list of letter
    )
} strlen        // must have the same stack in input and output

// if argc != 2 -> ERR
2 != ? ("./yasl_fact <fact_num>\n" print 1 exit)

!   // drop argv0

// if len argv1 > 2 -> ERR
= strlen 2 > ? ("<fact_num> must be a positive integer\n" print 1 exit)

// if first char is a letter -> ERR
= 0 == ? (= "0" != ? ("<fact_num> must be a number\n" print 1 exit))    

// if second char is a letter -> ERR
= strlen 2 == ? (= ][ ! 2^ ! = 0 == ? (= "0" != ?("<fact_num> must be a number\n" print 1 exit)) ! )

// if negative -> ERR
= 0 < ? ("<fact_num> must be positive\n" print 1 exit)

// if > 20 -> ERR
= 20 > ? ("result overflow\n" print 1 exit)

eval    // convert fact_num string to number
= 0 == ? ("1\n" print 0 exit)   // if 0 -> print 1

=:2 !   // init the stack2 with the objective
1:1     // init stack1 with the first nb of the factorial
1       // init stack0 to be correct with the multiplication

{
    //if stack1 == stack2 print/exit
    1:= 2:= == ? ("\n" + print 0 exit)

    //calcul
    1:1 1:+:1   // increment count
    1:= *   // multiply result with count

    facto
} facto
facto