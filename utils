{
    "========= 0 ========\n" print
    #
    #(print "\n" print)
    "====================\n" print
    1 exit
} print_stack_0
{
    "========= 1 ========\n" print
    1:#
    #(1:print "\n" print)
    "====================\n" print
    1 exit
} print_stack_1
{
    "========= 9 ========\n" print
    9:#
    #(9:print "\n" print)
    "====================\n" print
    1 exit
} print_stack_9





{
    # = 0 != ? (#print "\n" print) : !
} flush

{
    ][          // unlist the string with the size
    =           // duplicate the size of the string (needed to list back)
    = 2 + !^    // duplicate the size at the end of the string
    []          // list back the string
    2 ^         // rotate to have the size at the bottom
} strlen        // must have the same stack in input and output



3 != ? ("yasl_split <separator> <string>\n" print 1 exit)	// if the result of the comparaison is true exit
!   // drop argv0
strlen  
1 != ? ("separator must be a char\n" print 1 exit)	// if the result of the comparaison is true exit

][:1 1:!  //move and unlist the separator (bcause string) in stack1
][ #(=:9 !)

9:(
    # #(
        =               //cpy the char
        1:=             //copy the separator in the stack2
        == ? 2:flush:2 : =:2  //check the separator and the letter (and del them)
        !
    )
):9 //move each char in stack2
2:flush:2

